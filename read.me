# URL Shortener

A modern web application for shortening URLs, built with Node.js, Express, and PostgreSQL. This project provides a simple and intuitive interface to create short URLs and track the number of clicks for each link.

## 🌟 Features

A comprehensive solution for managing and tracking shortened URLs, offering:

- Conversion of long URLs into concise, manageable versions
- User-friendly web interface built with Bootstrap
- URL validation to ensure link integrity
- Click tracking for each shortened URL
- Complete listing of all shortened URLs with their statistics
- PostgreSQL database support for persistent storage
- Streamlined deployment on the Render platform

## 🛠️ Technology Stack

Our application leverages modern web technologies to provide a robust URL shortening service:

- **Node.js** - JavaScript runtime environment for server-side execution
- **Express** - Fast, unopinionated web framework for Node.js
- **PostgreSQL** - Advanced open-source relational database
- **Sequelize** - Powerful ORM for Node.js to handle database operations
- **EJS** - Embedded JavaScript templating for dynamic HTML generation
- **Bootstrap** - Frontend framework for responsive design
- **ShortID** - Generation of unique, non-sequential URL identifiers

## 🚀 Getting Started

### Prerequisites

Before you begin, ensure you have installed:
- Node.js (version 14 or higher)
- PostgreSQL (version 12 or higher)
- npm or yarn as package manager

### Local Development Setup

1. Clone the repository:
```bash
git clone https://github.com/your-username/url-shortener.git
cd url-shortener
```

2. Install dependencies:
```bash
npm install
```

3. Environment Configuration:
Create a `.env` file in the project root with the following variables:
```
DB_HOST=localhost
DB_USER=your_postgres_user
DB_PASSWORD=your_postgres_password
DB_NAME=url-shortener
DB_PORT=5432
```

4. Database Setup:
```bash
# Create the database
createdb url-shortener

# Run migrations
npx sequelize-cli db:migrate
```

5. Start the development server:
```bash
npm run dev
```

Your application will be available at `http://localhost:3000`

## 📦 Project Structure

The project follows a modular architecture for maintainability:

```
url-shortener/
├── config/
│   ├── database.js   # Database configuration
│   └── config.js     # General configuration
├── database/
│   └── index.js      # Database connection setup
├── migrations/
│   └── YYYYMMDDHHMMSS-create-short-urls.js
├── models/
│   └── shorturl.js   # URL model definition
├── views/
│   └── index.ejs     # Main application view
├── server.js         # Application entry point
├── .env              # Environment variables
├── .gitignore
└── package.json
```

## 🌐 Deployment

### Deploying to Render

Follow these steps to deploy your application:

1. Create an account on [Render](https://render.com)

2. Create a new PostgreSQL database on Render

3. Configure environment variables in your Web Service:
```
NODE_ENV=production
DATABASE_URL=your_render_postgres_url
```

4. Set up build configuration:
- Build Command: `npm install`
- Start Command: `npm start`

## 📝 API Documentation

The application exposes the following endpoints:

- `GET /` - Home page with URL shortening form
- `POST /shorturl` - Creates a new shortened URL
- `GET /:shortUrl` - Redirects to the original URL

## 🤝 Contributing

We welcome contributions! Here's how you can help:

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## 📄 License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.

## ✨ Acknowledgments

We would like to thank the creators and maintainers of:
- [Express](https://expressjs.com/)
- [Sequelize](https://sequelize.org/)
- [Bootstrap](https://getbootstrap.com/)
- [ShortID](https://github.com/dylang/shortid)

## 📞 Support

If you encounter any issues or have suggestions for improvements, please open an issue on GitHub. We're committed to maintaining and improving this project for the community.